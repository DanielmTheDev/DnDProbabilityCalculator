@page "/"
@using DnDProbabilityCalculator.Core.Adventuring.Abilities
@using DnDProbabilityCalculator.Application.Table.SavingThrow
@using DnDProbabilityCalculator.Application.Table.ReceiveHit
@using DnDProbabilityCalculator.Application.Table.DeliverHit

<PageTitle>Home</PageTitle>

<FluentDesignTheme @bind-Mode="@Mode" OfficeColor="OfficeColor.Word" StorageName="theme"/>

<FluentStack Orientation="Orientation.Horizontal" HorizontalAlignment="HorizontalAlignment.End">
    <FluentButton OnClick="@ToggleTheme" IconEnd="@(new Icons.Regular.Size24.DarkTheme())"></FluentButton>
    <FluentButton OnClick="@ShowHelpDialog" IconEnd="@(new Icons.Filled.Size24.Keyboard())"></FluentButton>
</FluentStack>

@if (_tableContexts.Any())
{
    <FluentGrid Class="grid" Justify="JustifyContent.SpaceEvenly" Spacing="3">
        @foreach (var currentContext in _tableContexts)
        {
            <FluentGridItem sm="12" md="6" lg="4">
                <FluentStack Orientation="Orientation.Vertical" HorizontalAlignment="HorizontalAlignment.Center">
                    <FluentStack HorizontalAlignment="HorizontalAlignment.Center">
                        <FluentCard Width="80%" Class="@GetAdvantageColorClass(currentContext.GeneralTableInfo.Advantage)">
                            <FluentStack Orientation="Orientation.Vertical" HorizontalAlignment="HorizontalAlignment.Center">
                                <h3>@currentContext.GeneralTableInfo.ActorName</h3>
                                <p>AC: @currentContext.GeneralTableInfo.ArmorClass</p>
                                <p>AttackModifier: @currentContext.GeneralTableInfo.AttackModifier</p>
                                <p>Damage per Hit: @currentContext.GeneralTableInfo.DamagePerHit</p>
                            </FluentStack>
                        </FluentCard>
                    </FluentStack>

                    <h5>Saving Throws ↓: # Ability Score | → DC</h5>
                    <FluentDataGrid Items=@currentContext.SavingThrowTable.Probabilities.AsQueryable() TGridItem=SavingThrowTableRow Class="probability-table">
                        <PropertyColumn Property="@(row => row!.AbilityScoreType.Abbreviated())" Align=Align.Start/>
                        @for (var i = 0; i < currentContext.SavingThrowTable.Dcs.Length; i++)
                        {
                            var localIndex = i;
                            <TemplateColumn Title="@currentContext.SavingThrowTable.Dcs[localIndex].ToString()" Align="Align.Start">
                                @{
                                    var cell = (context as SavingThrowTableRow).Cells[localIndex];
                                }
                                <span class="@(GetColorClass(cell))">@cell.ToString("P0")</span>
                            </TemplateColumn>
                        }
                    </FluentDataGrid>

                    <h5>Receive Hit ↓: # Attacks | → Modifier</h5>
                    <FluentDataGrid Items=@currentContext.ReceiveHitTable.Probabilities.AsQueryable() TGridItem=ReceiveHitTableRow Class="probability-table">
                        <PropertyColumn Property="@(row => $" >= {row!.NumberOfHits}")" Align=Align.Start/>
                        @for (var i = 0; i < currentContext.ReceiveHitTable.AttackModifiers.Count; i++)
                        {
                            var localIndex = i;
                            <TemplateColumn Title="@currentContext.ReceiveHitTable.AttackModifiers[localIndex].ToString()" Align="Align.Start">
                                @{
                                    var cell = (context as ReceiveHitTableRow).Cells[localIndex];
                                }
                                <span class="@(GetInvertedColorClass(cell))">@cell.ToString("P0")</span>
                            </TemplateColumn>
                        }
                    </FluentDataGrid>

                    <h5>Deliver Hit ↓: # Attacks | → Modifier</h5>
                    <FluentDataGrid Items=@currentContext.DeliverHitTable.Probabilities.AsQueryable() TGridItem=DeliverHitTableRow Class="probability-table">
                        <PropertyColumn Property="@(row => $" >= {row!.NumberOfHits}")" Align=Align.Start/>
                        @for (var i = 0; i < currentContext.DeliverHitTable.ArmorClasses.Count; i++)
                        {
                            var localIndex = i;
                            <TemplateColumn Title="@currentContext.DeliverHitTable.ArmorClasses[localIndex].ToString()" Align="Align.Start">
                                @{
                                    var cell = (context as DeliverHitTableRow).Cells[localIndex];
                                }
                                <span class="@(GetColorClass(cell))">@cell.ToString("P0")</span>
                            </TemplateColumn>
                        }
                    </FluentDataGrid>
                </FluentStack>
            </FluentGridItem>
        }
    </FluentGrid>
}

<style>
fluent-data-grid fluent-data-grid-row:nth-child(odd) {
    background-color: var(--neutral-layer-1);
}

.red {
    color: red;
}

.green {
    color: green;
}

.yellow {
    color: yellow;
}

.orange {
    color: orange;
}

.turquoise {
    color: turquoise;
}

.red-background {
    background-color: red;
}

.green-background {
    background-color: green;
}

.grid {
    width: 100% !important;
    margin: 0 !important;
}

.probability-table {
    width: 100% !important;
}

</style>
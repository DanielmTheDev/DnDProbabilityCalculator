<FluentCard Class="card" @onclick="() => NavigateToParty(Party.Id)">
    <div style="opacity: @(IsBusy ? 0.3 : 1);">
        <FluentStack HorizontalAlignment="HorizontalAlignment.End">
            <div @onclick:stopPropagation="true">
                <FluentButton Disabled="IsBusy" IconEnd="@(new Icons.Filled.Size12.Dismiss())" Appearance="Appearance.Stealth" OnClick="@(() => Delete())"/>
            </div>
            <div @onclick:stopPropagation="true">
                <FluentButton Disabled="IsBusy" IconEnd="@(new Icons.Regular.Size12.Edit())" Appearance="Appearance.Stealth" OnClick="@(() => NavigateToUpdate(Party.Id))"/>
            </div>
        </FluentStack>
        <FluentStack Orientation="Orientation.Vertical" HorizontalAlignment="HorizontalAlignment.Center" VerticalAlignment="VerticalAlignment.Top">
            <h3>@Party.Name</h3>

            @foreach (var character in Party.Characters)
            {
                <p>@character.Name</p>
            }
        </FluentStack>
    </div>

    @if (IsBusy)
    {
        <div class="progress-ring">
            <FluentProgressRing></FluentProgressRing>
        </div>
    }
</FluentCard>

<style>

.card {
    cursor: pointer;
    position: relative;
}

.card:hover {
    background-color: var(--neutral-fill-hover);
    color: var(--neutral-foreground-hover);
}

div.progress-ring {
  position: absolute;
  inset: 0;
  display: flex;
  justify-content: center;
  align-items: center;
}
</style>